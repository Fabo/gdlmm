;; From GdlDock

(define-signal layout-changed
  (of-object "GdlDock")
  (return-type "void")
  (when "last")
)

(define-property user-data
  (of-object "GdlDock")
  (prop-type "GParamPointer")
  (docs "Pointeur anonyme sur les données de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GdlDock")
  (prop-type "GParamObject")
  (docs "Le composant graphique parent de ce composant graphique. Cela doit être un conteneur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "Force la requête de largeur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "Force la requête de hauteur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est visible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique répond aux entrées de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si l'application peindra directement sur le composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut obtenir le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est celui qui a le focus au plus haut niveau")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut être le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Si VRAI, le composant graphique recevra l'action par défaut quand il a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique fait partie d'un composant graphique composite")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "GdlDock")
  (prop-type "GParamObject")
  (docs "Le style du composant graphique, qui contient des informations au sujet de son aspect (couleurs, ...)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "GdlDock")
  (prop-type "GParamFlags")
  (docs "Le masque d'événements qui indique les différents GdkEvents que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "GdlDock")
  (prop-type "GParamEnum")
  (docs "Le masque d'événements qui indique les différents événements d'extension que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si gtk_widget_show_all() ne doit pas affecter ce composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a une infobulle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "GdlDock")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "GdlDock")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "GdlDock")
  (prop-type "GParamObject")
  (docs "La fenêtre du composant graphique, s'il est créé.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property double-buffered
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est doublement mis en tampon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "GdlDock")
  (prop-type "GParamUInt")
  (docs "La largeur de la bordure vide à l'extérieur des conteneurs fils")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "GdlDock")
  (prop-type "GParamEnum")
  (docs "Indique la façon dont sont gérés les évènements de redimensionnement")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "GdlDock")
  (prop-type "GParamObject")
  (docs "Peut être utilisé pour ajouter un nouveau fils au conteneur")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GdlDock")
  (prop-type "GParamString")
  (docs "Nom unique pour identifier l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property long-name
  (of-object "GdlDock")
  (prop-type "GParamString")
  (docs "Nom facile à lire pour un humain pour l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stock-id
  (of-object "GdlDock")
  (prop-type "GParamString")
  (docs "Icône prédéfinie pour l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property master
  (of-object "GdlDock")
  (prop-type "GParamObject")
  (docs "Dock maître auquel l'objet détachable est connecté")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property floating
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Indique si l'objet détachable flotte dans sa propre fenêtre")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property default-title
  (of-object "GdlDock")
  (prop-type "GParamString")
  (docs "Titre par défaut pour les objets détachables flottants nouvellement créés")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "Largeur de l'objet détachable quand il est de type flottant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "Hauteur de l'objet détachable quand il est de type flottant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property floatx
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "Coordonnée X pour les objets détachables flottants")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property floaty
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "Coordonnée Y pour les objets détachables flottants")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockBar

(define-property orientation
  (of-object "GdlDockBar")
  (prop-type "GParamEnum")
  (docs "L'orientation de l'orientable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property user-data
  (of-object "GdlDockBar")
  (prop-type "GParamPointer")
  (docs "Pointeur anonyme sur les données de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GdlDockBar")
  (prop-type "GParamString")
  (docs "Le nom du composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GdlDockBar")
  (prop-type "GParamObject")
  (docs "Le composant graphique parent de ce composant graphique. Cela doit être un conteneur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "GdlDockBar")
  (prop-type "GParamInt")
  (docs "Force la requête de largeur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "GdlDockBar")
  (prop-type "GParamInt")
  (docs "Force la requête de hauteur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est visible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique répond aux entrées de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si l'application peindra directement sur le composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut obtenir le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est celui qui a le focus au plus haut niveau")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut être le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Si VRAI, le composant graphique recevra l'action par défaut quand il a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique fait partie d'un composant graphique composite")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "GdlDockBar")
  (prop-type "GParamObject")
  (docs "Le style du composant graphique, qui contient des informations au sujet de son aspect (couleurs, ...)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "GdlDockBar")
  (prop-type "GParamFlags")
  (docs "Le masque d'événements qui indique les différents GdkEvents que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "GdlDockBar")
  (prop-type "GParamEnum")
  (docs "Le masque d'événements qui indique les différents événements d'extension que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si gtk_widget_show_all() ne doit pas affecter ce composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a une infobulle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "GdlDockBar")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "GdlDockBar")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "GdlDockBar")
  (prop-type "GParamObject")
  (docs "La fenêtre du composant graphique, s'il est créé.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property double-buffered
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est doublement mis en tampon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "GdlDockBar")
  (prop-type "GParamUInt")
  (docs "La largeur de la bordure vide à l'extérieur des conteneurs fils")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "GdlDockBar")
  (prop-type "GParamEnum")
  (docs "Indique la façon dont sont gérés les évènements de redimensionnement")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "GdlDockBar")
  (prop-type "GParamObject")
  (docs "Peut être utilisé pour ajouter un nouveau fils au conteneur")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property spacing
  (of-object "GdlDockBar")
  (prop-type "GParamInt")
  (docs "La quantité d'espace entre les fils")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property homogeneous
  (of-object "GdlDockBar")
  (prop-type "GParamBoolean")
  (docs "Indique si les fils doivent tous avoir la même taille")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property master
  (of-object "GdlDockBar")
  (prop-type "GParamObject")
  (docs "Objet GdlDockMaster auquel le composant graphique de barre détachable  est lié")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property dockbar-style
  (of-object "GdlDockBar")
  (prop-type "GParamEnum")
  (docs "Style de barre d'objet détachable sur laquelle afficher les éléments")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockItem

(define-signal dock-drag-begin
  (of-object "GdlDockItem")
  (return-type "void")
  (when "first")
)

(define-signal dock-drag-motion
  (of-object "GdlDockItem")
  (return-type "void")
  (when "first")
  (parameters
    '("gint" "p0")
    '("gint" "p1")
  )
)

(define-signal dock-drag-end
  (of-object "GdlDockItem")
  (return-type "void")
  (when "first")
  (parameters
    '("gboolean" "p0")
  )
)

(define-signal selected
  (of-object "GdlDockItem")
  (return-type "void")
  (when "first")
)

(define-property user-data
  (of-object "GdlDockItem")
  (prop-type "GParamPointer")
  (docs "Pointeur anonyme sur les données de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GdlDockItem")
  (prop-type "GParamObject")
  (docs "Le composant graphique parent de ce composant graphique. Cela doit être un conteneur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "GdlDockItem")
  (prop-type "GParamInt")
  (docs "Force la requête de largeur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "GdlDockItem")
  (prop-type "GParamInt")
  (docs "Force la requête de hauteur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est visible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique répond aux entrées de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si l'application peindra directement sur le composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut obtenir le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est celui qui a le focus au plus haut niveau")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut être le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Si VRAI, le composant graphique recevra l'action par défaut quand il a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique fait partie d'un composant graphique composite")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "GdlDockItem")
  (prop-type "GParamObject")
  (docs "Le style du composant graphique, qui contient des informations au sujet de son aspect (couleurs, ...)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "GdlDockItem")
  (prop-type "GParamFlags")
  (docs "Le masque d'événements qui indique les différents GdkEvents que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "GdlDockItem")
  (prop-type "GParamEnum")
  (docs "Le masque d'événements qui indique les différents événements d'extension que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si gtk_widget_show_all() ne doit pas affecter ce composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a une infobulle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "GdlDockItem")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "GdlDockItem")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "GdlDockItem")
  (prop-type "GParamObject")
  (docs "La fenêtre du composant graphique, s'il est créé.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property double-buffered
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est doublement mis en tampon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "GdlDockItem")
  (prop-type "GParamUInt")
  (docs "La largeur de la bordure vide à l'extérieur des conteneurs fils")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "GdlDockItem")
  (prop-type "GParamEnum")
  (docs "Indique la façon dont sont gérés les évènements de redimensionnement")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "GdlDockItem")
  (prop-type "GParamObject")
  (docs "Peut être utilisé pour ajouter un nouveau fils au conteneur")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GdlDockItem")
  (prop-type "GParamString")
  (docs "Nom unique pour identifier l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property long-name
  (of-object "GdlDockItem")
  (prop-type "GParamString")
  (docs "Nom facile à lire pour un humain pour l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stock-id
  (of-object "GdlDockItem")
  (prop-type "GParamString")
  (docs "Icône prédéfinie pour l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property master
  (of-object "GdlDockItem")
  (prop-type "GParamObject")
  (docs "Dock maître auquel l'objet détachable est connecté")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property orientation
  (of-object "GdlDockItem")
  (prop-type "GParamEnum")
  (docs "Orientation de l'élément détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Si défini, l'élément détachable peut être redimensionné lorsqu'il est ancré à un composant GtkPanel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property behavior
  (of-object "GdlDockItem")
  (prop-type "GParamFlags")
  (docs "Comportement général pour l'élément détachable (ex. s'il peut flotter, s'il est verrouillé, etc.)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property locked
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "Si défini, on ne peut pas faire glisser l'élément détachable et la poignée n'est pas affichée")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preferred-width
  (of-object "GdlDockItem")
  (prop-type "GParamInt")
  (docs "Largeur préférée pour l'élément détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preferred-height
  (of-object "GdlDockItem")
  (prop-type "GParamInt")
  (docs "Hauteur préférée pour l'élément détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockLayout

(define-property master
  (of-object "GdlDockLayout")
  (prop-type "GParamObject")
  (docs "Objet GdlDockMaster auquel l'objet de disposition est attaché")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property dirty
  (of-object "GdlDockLayout")
  (prop-type "GParamBoolean")
  (docs "Vrai si les dispositions ont changé et ont besoin d'être enregistrés dans un fichier")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GdlDockMaster

(define-signal layout-changed
  (of-object "GdlDockMaster")
  (return-type "void")
  (when "last")
)

(define-property default-title
  (of-object "GdlDockMaster")
  (prop-type "GParamString")
  (docs "Titre par défaut pour les objets détachables flottants nouvellement créés")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property locked
  (of-object "GdlDockMaster")
  (prop-type "GParamInt")
  (docs "Si défini à 1, tous les éléments détachables connectés au maître seront verrouillés ; si défini à 0, tout sera déverrouillé ; -1 indique une incohérence parmi les éléments")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property switcher-style
  (of-object "GdlDockMaster")
  (prop-type "GParamEnum")
  (docs "Style des boutons de basculement")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockObject

(define-signal detach
  (of-object "GdlDockObject")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "p0")
  )
)

(define-signal dock
  (of-object "GdlDockObject")
  (return-type "void")
  (when "first")
  (parameters
    '("GdlDockObject*" "p0")
    '("GdlDockPlacement" "p1")
    '("GValue*" "p2")
  )
)

(define-property user-data
  (of-object "GdlDockObject")
  (prop-type "GParamPointer")
  (docs "Pointeur anonyme sur les données de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GdlDockObject")
  (prop-type "GParamObject")
  (docs "Le composant graphique parent de ce composant graphique. Cela doit être un conteneur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "GdlDockObject")
  (prop-type "GParamInt")
  (docs "Force la requête de largeur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "GdlDockObject")
  (prop-type "GParamInt")
  (docs "Force la requête de hauteur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est visible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique répond aux entrées de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si l'application peindra directement sur le composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut obtenir le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est celui qui a le focus au plus haut niveau")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut être le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Si VRAI, le composant graphique recevra l'action par défaut quand il a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique fait partie d'un composant graphique composite")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "GdlDockObject")
  (prop-type "GParamObject")
  (docs "Le style du composant graphique, qui contient des informations au sujet de son aspect (couleurs, ...)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "GdlDockObject")
  (prop-type "GParamFlags")
  (docs "Le masque d'événements qui indique les différents GdkEvents que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "GdlDockObject")
  (prop-type "GParamEnum")
  (docs "Le masque d'événements qui indique les différents événements d'extension que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si gtk_widget_show_all() ne doit pas affecter ce composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a une infobulle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "GdlDockObject")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "GdlDockObject")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "GdlDockObject")
  (prop-type "GParamObject")
  (docs "La fenêtre du composant graphique, s'il est créé.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property double-buffered
  (of-object "GdlDockObject")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est doublement mis en tampon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "GdlDockObject")
  (prop-type "GParamUInt")
  (docs "La largeur de la bordure vide à l'extérieur des conteneurs fils")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "GdlDockObject")
  (prop-type "GParamEnum")
  (docs "Indique la façon dont sont gérés les évènements de redimensionnement")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "GdlDockObject")
  (prop-type "GParamObject")
  (docs "Peut être utilisé pour ajouter un nouveau fils au conteneur")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GdlDockObject")
  (prop-type "GParamString")
  (docs "Nom unique pour identifier l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property long-name
  (of-object "GdlDockObject")
  (prop-type "GParamString")
  (docs "Nom facile à lire pour un humain pour l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stock-id
  (of-object "GdlDockObject")
  (prop-type "GParamString")
  (docs "Icône prédéfinie pour l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property master
  (of-object "GdlDockObject")
  (prop-type "GParamObject")
  (docs "Dock maître auquel l'objet détachable est connecté")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockPlaceholder

(define-property user-data
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamPointer")
  (docs "Pointeur anonyme sur les données de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamObject")
  (docs "Le composant graphique parent de ce composant graphique. Cela doit être un conteneur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "Force la requête de largeur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "Force la requête de hauteur du composant graphique, ou -1 si la requête naturel doit être utilisé")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est visible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique répond aux entrées de l'utilisateur")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si l'application peindra directement sur le composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut obtenir le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est celui qui a le focus au plus haut niveau")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique peut être le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est le composant graphique par défaut")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Si VRAI, le composant graphique recevra l'action par défaut quand il a le focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique fait partie d'un composant graphique composite")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamObject")
  (docs "Le style du composant graphique, qui contient des informations au sujet de son aspect (couleurs, ...)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamFlags")
  (docs "Le masque d'événements qui indique les différents GdkEvents que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamEnum")
  (docs "Le masque d'événements qui indique les différents événements d'extension que ce composant graphique reçoit")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si gtk_widget_show_all() ne doit pas affecter ce composant graphique")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique a une infobulle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamString")
  (docs "Le contenu de l'infobulle pour ce composant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamObject")
  (docs "La fenêtre du composant graphique, s'il est créé.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property double-buffered
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le composant graphique est doublement mis en tampon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamUInt")
  (docs "La largeur de la bordure vide à l'extérieur des conteneurs fils")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamEnum")
  (docs "Indique la façon dont sont gérés les évènements de redimensionnement")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamObject")
  (docs "Peut être utilisé pour ajouter un nouveau fils au conteneur")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamString")
  (docs "Nom unique pour identifier l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property long-name
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamString")
  (docs "Nom facile à lire pour un humain pour l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stock-id
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamString")
  (docs "Icône prédéfinie pour l'objet détachable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property master
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamObject")
  (docs "Dock maître auquel l'objet détachable est connecté")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sticky
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si la variable garde la dépendance vers son hôte ou se déplace dans la hiérarchie quand l'hôte est ré-attaché")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property host
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamObject")
  (docs "L'objet détachable auquel la variable est attachée")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property next-placement
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamEnum")
  (docs "La position où un élément sera attaché à notre hôte si une requête est faite pour s'attacher à nous")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "Largeur du composant graphique quand il est attaché au substituant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "Hauteur du composant graphique quand il est attaché au substituant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property floating
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Indique si le substituant est destiné à un objet détachable flottant de premier niveau")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property floatx
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "Coordonnée X pour l'objet détachable lorsqu'il est flottant")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property floaty
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "Coordonnée Y pour l'objet détachable lorsqu'il est flottant")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

