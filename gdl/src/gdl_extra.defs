;; From GdlDock

(define-signal layout-changed
  (of-object "GdlDock")
  (return-type "void")
  (when "last")
)

(define-property floating
  (of-object "GdlDock")
  (prop-type "GParamBoolean")
  (docs "Whether the dock is floating in its own window")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property default-title
  (of-object "GdlDock")
  (prop-type "GParamString")
  (docs "Default title for the newly created floating docks")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "Width for the dock when it's of floating type")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "Height for the dock when it's of floating type")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property floatx
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "X coordinate for a floating dock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property floaty
  (of-object "GdlDock")
  (prop-type "GParamInt")
  (docs "Y coordinate for a floating dock")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockBar

(define-property master
  (of-object "GdlDockBar")
  (prop-type "GParamObject")
  (docs "GdlDockMaster object which the dockbar widget is attached to")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property dockbar-style
  (of-object "GdlDockBar")
  (prop-type "GParamEnum")
  (docs "Dockbar style to show items on it")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockItem

(define-signal dock-drag-begin
  (of-object "GdlDockItem")
  (return-type "void")
  (when "first")
)

(define-signal dock-drag-motion
  (of-object "GdlDockItem")
  (return-type "void")
  (when "first")
  (parameters
    '("gint" "p0")
    '("gint" "p1")
  )
)

(define-signal dock-drag-end
  (of-object "GdlDockItem")
  (return-type "void")
  (when "first")
  (parameters
    '("gboolean" "p0")
  )
)

(define-signal selected
  (of-object "GdlDockItem")
  (return-type "void")
  (when "first")
)

(define-property orientation
  (of-object "GdlDockItem")
  (prop-type "GParamEnum")
  (docs "Orientation of the docking item")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "If set, the dock item can be resized when docked in a GtkPanel widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property behavior
  (of-object "GdlDockItem")
  (prop-type "GParamFlags")
  (docs "General behavior for the dock item (i.e. whether it can float, if it's locked, etc.)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property locked
  (of-object "GdlDockItem")
  (prop-type "GParamBoolean")
  (docs "If set, the dock item cannot be dragged around and it doesn't show a grip")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preferred-width
  (of-object "GdlDockItem")
  (prop-type "GParamInt")
  (docs "Preferred width for the dock item")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preferred-height
  (of-object "GdlDockItem")
  (prop-type "GParamInt")
  (docs "Preferred height for the dock item")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockLayout

(define-property master
  (of-object "GdlDockLayout")
  (prop-type "GParamObject")
  (docs "GdlDockMaster object which the layout object is attached to")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property dirty
  (of-object "GdlDockLayout")
  (prop-type "GParamBoolean")
  (docs "True if the layouts have changed and need to be saved to a file")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GdlDockMaster

(define-signal layout-changed
  (of-object "GdlDockMaster")
  (return-type "void")
  (when "last")
)

(define-property default-title
  (of-object "GdlDockMaster")
  (prop-type "GParamString")
  (docs "Default title for newly created floating docks")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property locked
  (of-object "GdlDockMaster")
  (prop-type "GParamInt")
  (docs "If is set to 1, all the dock items bound to the master are locked; if it's 0, all are unlocked; -1 indicates inconsistency among the items")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property switcher-style
  (of-object "GdlDockMaster")
  (prop-type "GParamEnum")
  (docs "Switcher buttons style")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockObject

(define-signal detach
  (of-object "GdlDockObject")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "p0")
  )
)

(define-signal dock
  (of-object "GdlDockObject")
  (return-type "void")
  (when "first")
  (parameters
    '("GdlDockObject*" "p0")
    '("GdlDockPlacement" "p1")
    '("GValue*" "p2")
  )
)

(define-property name
  (of-object "GdlDockObject")
  (prop-type "GParamString")
  (docs "Unique name for identifying the dock object")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property long-name
  (of-object "GdlDockObject")
  (prop-type "GParamString")
  (docs "Human readable name for the dock object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stock-id
  (of-object "GdlDockObject")
  (prop-type "GParamString")
  (docs "Stock icon for the dock object")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property master
  (of-object "GdlDockObject")
  (prop-type "GParamObject")
  (docs "Dock master this dock object is bound to")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GdlDockPlaceholder

(define-property sticky
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Whether the placeholder will stick to its host or move up the hierarchy when the host is redocked")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property host
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamObject")
  (docs "The dock object this placeholder is attached to")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property next-placement
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamEnum")
  (docs "The position an item will be docked to our host if a request is made to dock to us")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "Width for the widget when it's attached to the placeholder")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "Height for the widget when it's attached to the placeholder")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property floating
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamBoolean")
  (docs "Whether the placeholder is standing in for a floating toplevel dock")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property floatx
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "X coordinate for dock when floating")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property floaty
  (of-object "GdlDockPlaceholder")
  (prop-type "GParamInt")
  (docs "Y coordinate for dock when floating")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

